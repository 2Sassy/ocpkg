#!/bin/bash
#
## @file		ocbootstrap
## @copyright		OpenCog Foundation (2012)
## @author		David Hart <dhart@opencog.org>
## @section DESCRIPTION	create a chroot environment in which to run ocpkg 
## @section LICENSE	Permission to copy and modify is granted under the GPL
## @section REQUIREMENT	any Linux disto, ocpkg in your path, e.g. /usr/local/bin/ocpkg

# Note: Edit variables as needed to suit your architecture (i386 or amd64) and
#       closest Ubuntu mirror

ARCH=amd64
UBUNTU_MIRROR=http://archive.ubuntu.com/ubuntu
CHROOT_DISTRO=precise
CHROOT_DIR=/var/$CHROOT_DISTRO

if [ $(which dpkg) ] ; then 
  wget http://ftp.debian.org/debian/pool/main/d/debootstrap/debootstrap_1.0.39_all.deb
  dpkg -i debootstrap_1.0.39_all.deb
else
  wget http://ftp.debian.org/debian/pool/main/d/debootstrap/debootstrap_1.0.39.tar.gz
  tar zxvf debootstrap_1.0.39.tar.gz
  cd debootstrap_1.0.39
  make devices.tar.gz
  export DEBOOTSTRAP_DIR=`pwd`
  export PATH=$PATH:$DEBOOTSTRAP_DIR
fi

mkdir $CHROOT_DIR
debootstrap --arch $ARCH $CHROOT_DISTRO $CHROOT_DIR $UBUNTU_MIRROR

mkdir -p $CHROOT_DIR/usr/local/bin
mkdir -p $CHROOT_DIR/usr/local/src/opencog

ln -f -P /etc/mtab $CHROOT_DIR/etc/mtab
ln -f -P `which ocpkg` $CHROOT_DIR/usr/local/bin/ocpkg

mount -o bind /dev $CHROOT_DIR/dev
mount -o bind /proc $CHROOT_DIR/proc
mount -o bind /sys $CHROOT_DIR/sys
mount -o bind /tmp $CHROOT_DIR/tmp
mount -o bind /dev/pts $CHROOT_DIR/dev/pts
mount -o bind /var/cache/apt/archives $CHROOT_DIR/var/cache/apt/archives
mount -o bind /var/lib/apt/lists $CHROOT_DIR/var/lib/apt/lists
mount -o bind /usr/local/src/opencog $CHROOT_DIR/usr/local/src/opencog

echo "deb $UBUNTU_MIRROR $CHROOT_DISTRO main universe" > $CHROOT_DIR/etc/apt/sources.list

chroot $CHROOT_DIR /usr/bin/apt-get update
chroot $CHROOT_DIR /usr/bin/apt-get -y install python-software-properties
chroot $CHROOT_DIR /usr/local/bin/ocpkg
